package aula5;

public class ControleRemoto implements Controlador {
	private int volume;
	private boolean ligado;
	private boolean tocando;

	// GETTERS E SETTERS
	public int getVolume() {
		return volume;
	}

	public void setVolume(int volume) {
		this.volume = volume;
	}

	public boolean getLigado() {
		return ligado;
	}

	public void setLigado(boolean ligado) {
		this.ligado = ligado;
	}

	public boolean getTocando() {
		return tocando;
	}

	public void setTocando(boolean tocando) {
		this.tocando = tocando;
	}

	// CONSTRUTOR
	public void Construtor() {
		setVolume(50);
		setLigado(false);
		setTocando(false);
	}

	// SOBREESCREVENDO MÉTODOS
	@Override
	public void ligar() {
		setLigado(true);
	}

	@Override
	public void desligar() {
		setLigado(false);
	}

	@Override
	public void abrirMenu() {
		getLigado();
		getVolume();
		for (int i = 0; i <= getVolume(); i++) {
			System.out.println("|");
		}
		getTocando();
	}

	@Override
	public void fecharMenu() {
		System.out.println("Fechando menu.");
	}

	@Override
	public void maisVolume() {
		if (getLigado()) {
			setVolume(getVolume() + 1);
		} else {
			System.out.println("Impossível aumentar volume.");
		}
	}

	@Override
	public void menosVolume() {
		if (getLigado()) {
			setVolume(getVolume() - 1);
		} else {
			System.out.println("Impossível diminuir volume volume.");
		}
	}

	@Override
	public void ligarMudo() {
		if (getLigado() && getVolume() > 0) {
			setVolume(0);
		} else {
			System.out.println("Impossível ligar mudo.");
		}
	}

	@Override
	public void desligarMudo() {
		if (getLigado() && getVolume() == 0) {
			setVolume(50);
		} else {
			System.out.println("Impossível desligar mudo.");
		}
	}

	@Override
	public void play() {
		if (getLigado() && getTocando() == false) {
			setTocando(true);
		} else {
			System.out.println("Impossível dar play.");
		}
	}

	@Override
	public void pause() {
		if (getLigado() && getTocando()) {
			setTocando(false);
		} else {
			System.out.println("Impossível dar pause.");
		}
	}

}
